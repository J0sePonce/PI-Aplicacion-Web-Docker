version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443" # Puerto seguro
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro # Volumen para los certificados SSL
    depends_on:
      - wordpress
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  wordpress:
    image: wordpress:latest
    container_name: wordpress
    ports:
      - "8000:80"
      - "8443:443" # Puerto seguro WP
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_NAME=my_wordpress
      - WORDPRESS_DB_USER=root
      - WORDPRESS_DB_PASSWORD=example
    depends_on:
      - mariadb
    volumes:
      - ./wordpress_data:/var/www/html
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_DATABASE=my_wordpress
    volumes:
      - ./mariadb_data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "9000:80"
    environment:
      - PMA_HOST=mariadb
      - PMA_USER=root
      - PMA_PASSWORD=example
    depends_on:
      - mariadb
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Madrid
    volumes:
      - /PI-Aplicacion-Web-Docker/wordpress/duplicati_config:/config # Volumen configuracion Duplicati
      - /PI-Aplicacion-Web-Docker/wordpress:/source # Volumen de los ficheros a respaldar
    ports:
      - "8200:8200"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - cadvisor
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - "9091:9091"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus
      - cadvisor
    deploy:
      replicas: 1
      restart_policy:
        condition: any

# Volumenes para datos persistentes
volumes:
  wordpress_mariadb_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./mariadb_data

  wordpress_wordpress_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./wordpress_data

  wordpress_grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./grafana_data

  wordpress_prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data
